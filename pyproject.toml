[tool.poetry]
name = "zen"
version = "0.1.0"
description = ""
authors = ["Rusih100 <rusih100@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.103.1"
uvicorn = "^0.23.2"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.20"}
alembic = "^1.12.0"
pydantic-settings = "^2.0.3"
asyncpg = "^0.28.0"
pydantic = {extras = ["email"], version = "^2.4.1"}

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
isort = "^5.12.0"
ruff = "^0.0.288"
pytest = "^7.4.2"
pytest-asyncio = "^0.21.1"
pytest-dotenv = "^0.5.2"
httpx = "^0.25.0"
pytest-cov = "^4.1.0"

[tool.black]
target-version = ['py311']
line-length = 80
# The alembic directory is not excluded in .gitignore
extend-exclude = '''
/(
  | alembic
)/
'''

[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3
combine_as_imports = true

[tool.ruff]
target-version = "py311"
line-length = 80
ignore-init-module-imports = true
extend-exclude = ["alembic"]  # The alembic directory is not excluded in .gitignore
src = [
    "src",
    "tests"
]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "UP",     # pyupgrade
    "C",      # flake8-comprehensions
    "B",      # flake8-bugbear
    "ISC",    # flake8-implicit-str-concat
    "ASYNC",  # flake8-async
    "ANN",    # flake8-annotations
    "TCH",    # flake8-type-checking
    "PT",     # flake8-pytest-style
    "RUF",    # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "F821",   # checks for uses of undefined names, breaks sqlalchemy models
    "UP007",  # large models are unreadable
    "ANN101", # removes type checking for self
    "ANN401"  # allows type Any
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = [".", "src"]
env_files = [
    ".test.env"
]

[tool.coverage.run]
branch = true
concurrency = [
    "greenlet",
    "thread"
]
source = [
    "src"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
